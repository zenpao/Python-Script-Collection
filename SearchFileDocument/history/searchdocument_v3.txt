import os
import fnmatch

def search_files(root, pattern, content):
    matches = []

    total_files = 0
    processed_files = 0

    # Count the total number of files
    for path, dirs, files in os.walk(root):
        total_files += len(files)

    # Search for files and update progress
    for path, dirs, files in os.walk(root):
        for filename in fnmatch.filter(files, pattern):
            file_path = os.path.join(path, filename)

            # Check if content exists in file name or file content
            if content.lower() in filename.lower() or contains_content(file_path, content.lower()):
                matches.append(file_path)
                print(file_path)  # Print file path as soon as a match is found

            processed_files += 1
            progress = int(processed_files / total_files * 100)
            print(f"Progress: {progress}%")

    return matches


def contains_content(file_path, content):
    with open(file_path, 'r') as file:
        file_content = file.read().lower()
        if content in file_content:
            return True
    return False


print("""\n
========================NOTICE==========================
THIS IS A TOOL FOR SEARCHING FILES WITH PARAMETERS.

INTENDED FOR SPECIFIC-USE ONLY.
(Such as: Documents with specific file names or content)
========================NOTICE==========================
""")

# Prompt user for directory
directory = input("Enter the directory to search in: ")

# Prompt user for file pattern
file_pattern = input("Enter the file pattern or extension (e.g., *.txt, *.html): ")

# Example usage
search_content = input("Enter the content you want to search for: ")

results = search_files(directory, file_pattern, search_content)

if results:
    print("\n[!] Search completed. Documents containing the specified content or matching file name:")
    for file_path in results:
        print(file_path)
else:
    print("\nNo matching documents found.")

# Save results to a text file in the same directory as the program
output_file = os.path.join(os.getcwd(), "search_results.txt")
with open(output_file, 'w') as file:
    if results:
        file.write(f"Search results ({search_content}, {file_pattern}):\n")
        for file_path in results:
            file.write(file_path + "\n")
    else:
        file.write("No matching documents found.")

print(f"\nSearch results saved to {output_file}")
print(f"Output file directory: {os.path.dirname(os.path.abspath(output_file))}")

# Prompt user to press any key to continue
input("Press any key to continue...")
